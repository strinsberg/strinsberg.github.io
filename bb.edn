{:paths ["bb"]
 :tasks

 {:requires
  ([clojure.string :as str] [babashka.process :as ps] [babashka.fs :as fs])
  :init (def tmp "/tmp/strinsberg.github.io")
  :enter (println (str/capitalize (:name (current-task))))

  clean {:doc "Remove build artifacts."
         :task (do (println "Removing build dirs...")
                   (fs/delete-tree "build")
                   (fs/delete-tree "pages"))}

  build-html
  {:doc
   "Compile html files and copy them to pages directory. Will replace any existing files in pages and will not remove any that are no longer in src."
   :task compile-html/-main}

  build-css {:doc "Copy css files to pages"
             :task (shell "cp -r src/css pages/")}

  build-all {:doc "Build all and copy to pages."
             :depends [clean build-html build-css]
             :task (println "*** Pages Built Succesfully ***")}

  serve {:doc "Build and serve"
         :depends [build-all]
         :task (shell "httplz -p 8080 pages")}

  ;; This works, though I am honestly not sure if it is the best way to do it.
  ;; Note that because build and pages are not tracked by git they will be
  ;; carried over when checking out gh-pages and then deleted along with
  ;; the previous contents of gh-pages.
  deploy {:doc "Build all and deploy to github pages."
          :depends [build-all]
          :task (do (fs/delete-tree tmp)
                    (fs/copy-tree "pages" tmp)
                    (shell "git checkout" "gh-pages")
                    (println "Switched to pages branch")
                    ;; does not delete hidden files or dirs
                    (run! fs/delete-tree (fs/glob (fs/cwd) "**"))
                    (fs/copy-tree tmp (fs/cwd))
                    (println "Copied new pages files")
                    (shell "git add" ".")
                    (shell "git commit" "-m" "'update pages'")
                    (shell "git push")
                    (shell "git checkout" "main")
                    (println "*** Pages Deployed Succesfully ***"))}}}
