{:paths ["bb" "src"]
 :tasks


 {:requires
  ([clojure.string :as str] [babashka.process :as ps] [babashka.fs :as fs])
  :init (def tmp "/tmp/strinsberg.github.io")
  :enter (let [task (current-task)]
           (when (not (str/starts-with? (str (:name task)) "-"))
             (println (str/capitalize (:name task)) " - " (:doc task))))

  clean {:doc "Remove build artifacts."
         :task (do (fs/delete-tree "build") (fs/delete-tree "pages"))}

  build {:doc "Convert markdown to html and replace html placeholders."
         :task (do (run 'clean)
                   (run '-build:html)
                   (run '-build:css)
                   (run '-build:js)
                   (run '-build:assets)
                   (println "*** Pages Built Succesfully ***"))}

  ;; NOTE that the private build targets only copy files and do not remove anything, so runnng them on their own may result in unexpected behaviour.

  -build:html {:doc "Compile html files and copy them to pages directory."
               :task (do (fs/create-dir "pages")
                         (run! (fn [f]
                                 (shell "bb" "-m"
                                        "utility/compile-html"
                                        (-> f
                                            (str/replace ".clj" "")
                                            (str/replace "src/" ""))))
                               (fs/glob "src" "**.clj")))}

  -build:css {:doc "Copy css files to pages"
              :task (shell "cp" "-r" "css" "pages/")}

  -build:js {:doc "Copy js files to pages"
             :task (shell "cp" "-r" "js" "pages/")}

  -build:assets {:doc "Copy asset files to pages"
                 :task (shell "cp" "-r" "assets" "pages/")}

  ;; Not hot reload, but changes from build will be reflected on page refresh.
  serve {:doc "Serve the pages folder."
         :task (shell "python3 -m http.server -d ./pages")}

  ;; This works, though I am honestly not sure if it is the best way to do it.
  ;; Note that because build and pages are not tracked by git they will be
  ;; carried over when checking out gh-pages and then deleted along with
  ;; the previous contents of gh-pages.
  deploy {:doc "Build all and deploy to github pages."
          :depends [build]
          :task (do (fs/delete-tree tmp)
                    (fs/copy-tree "pages" tmp)
                    (shell "git checkout" "gh-pages")
                    ;; does not delete hidden files or dirs
                    (run! fs/delete-tree (fs/glob (fs/cwd) "**"))
                    (fs/copy-tree tmp (fs/cwd))
                    (println "Copied new pages files")
                    (shell "git add" ".")
                    (shell "git commit" "-m" "'update pages'")
                    (shell "git push")
                    (shell "git checkout" "main")
                    (println "*** Pages Deployed Succesfully ***"))}}}
