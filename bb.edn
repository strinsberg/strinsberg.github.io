{:paths ["bb"]
 :tasks

 {:requires
  ([clojure.string :as str] [babashka.process :as ps] [babashka.fs :as fs])
  :init (def tmp "/tmp/strinsberg.github.io")
  :enter (let [task (current-task)]
           (when (not (str/starts-with? (str (:name task)) "-"))
             (println (str/capitalize (:name task)) " - " (:doc task))))

  build {:doc "Convert markdown to html and replace html placeholders."
         :task (do (run 'clean)
                   (run '-build:html)
                   (run '-build:css)
                   (println "*** Pages Built Succesfully ***"))}

  ;; Note this does not clean the pages folder, but just copies/replaces
  ;; new or modified files. Removed src files will not be removed during build.
  -build:html {:doc "Compile html files and copy them to pages directory."
               :task compile-html/-main}

  -build:css {:doc "Copy css files to pages"
              :task (shell "cp" "-r" "src/css" "pages/")}


  ;; Note that once this is running build-all can be called again and a page
  ;; refresh will reflect the changes. Not exactly hot reload, but the server
  ;; will reflect changes without having to be restarted, but obviously
  ;; the compilation must be re-run for changes to be reflected in the pages dir.
  serve {:doc "Build and serve"
         :depends [build]
         :task (shell "httplz -p 8080 pages")}

  ;; This works, though I am honestly not sure if it is the best way to do it.
  ;; Note that because build and pages are not tracked by git they will be
  ;; carried over when checking out gh-pages and then deleted along with
  ;; the previous contents of gh-pages.
  deploy {:doc "Build all and deploy to github pages."
          :depends [build]
          :task (do (fs/delete-tree tmp)
                    (fs/copy-tree "pages" tmp)
                    (shell "git checkout" "gh-pages")
                    ;; does not delete hidden files or dirs
                    (run! fs/delete-tree (fs/glob (fs/cwd) "**"))
                    (fs/copy-tree tmp (fs/cwd))
                    (println "Copied new pages files")
                    (shell "git add" ".")
                    (shell "git commit" "-m" "'update pages'")
                    (shell "git push")
                    (shell "git checkout" "main")
                    (println "*** Pages Deployed Succesfully ***"))}

  clean {:doc "Remove build artifacts."
         :task (do (fs/delete-tree "build") (fs/delete-tree "pages"))}}}
